Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> time
Rule 1     time -> DIGIT AMPM
Rule 2     time -> DIGIT COLON DIGIT
Rule 3     time -> DIGIT COLON DIGIT AMPM

Terminals, with rules where they appear

AMPM                 : 1 3
COLON                : 2 3
DIGIT                : 1 2 2 3 3
error                : 

Nonterminals, with rules where they appear

time                 : 0

Parsing method: LALR

state 0

    (0) S' -> . time
    (1) time -> . DIGIT AMPM
    (2) time -> . DIGIT COLON DIGIT
    (3) time -> . DIGIT COLON DIGIT AMPM

    DIGIT           shift and go to state 1

    time                           shift and go to state 2

state 1

    (1) time -> DIGIT . AMPM
    (2) time -> DIGIT . COLON DIGIT
    (3) time -> DIGIT . COLON DIGIT AMPM

    AMPM            shift and go to state 3
    COLON           shift and go to state 4


state 2

    (0) S' -> time .



state 3

    (1) time -> DIGIT AMPM .

    $end            reduce using rule 1 (time -> DIGIT AMPM .)


state 4

    (2) time -> DIGIT COLON . DIGIT
    (3) time -> DIGIT COLON . DIGIT AMPM

    DIGIT           shift and go to state 5


state 5

    (2) time -> DIGIT COLON DIGIT .
    (3) time -> DIGIT COLON DIGIT . AMPM

    $end            reduce using rule 2 (time -> DIGIT COLON DIGIT .)
    AMPM            shift and go to state 6


state 6

    (3) time -> DIGIT COLON DIGIT AMPM .

    $end            reduce using rule 3 (time -> DIGIT COLON DIGIT AMPM .)

